"use strict";(()=>{var e={};e.id=389,e.ids=[389],e.modules={846:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5971:(e,s,r)=>{r.r(s),r.d(s,{patchFetch:()=>h,routeModule:()=>g,serverHooks:()=>m,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>f});var t={};r.r(t),r.d(t,{POST:()=>u,dynamic:()=>p});var o=r(6559),n=r(8088),l=r(7719),i=r(2190),a=r(8978);class c{constructor(){this.billingService=new a.D}async processAllSubscriptions(e="paypal"){try{console.log("Starting monthly billing process...");let s=["user_123","user_456","user_789"];console.log("Users due for billing:",s);let r=[];for(let t of s)try{console.log(`Processing billing for user: ${t}`);let s=await this.billingService.processMonthlyBilling(t,e);r.push({userId:t,status:"success",transaction:s}),console.log(`Billing successful for user ${t}`)}catch(e){console.error(`Billing failed for user ${t}:`,e),r.push({userId:t,status:"failed",error:e instanceof Error?e.message:String(e)})}return console.log("Monthly billing process completed:",r),r}catch(e){throw console.error("Billing cron job failed:",e),e}}}let p="force-dynamic";async function u(e){try{console.log("=== Starting Billing Process API ===");let s=(await e.json().catch(()=>({}))).preferredPaymentMethod||"paypal";console.log(`Using preferred payment method: ${s}`);let r=new c,t=await r.processAllSubscriptions(s);return console.log("=== Billing Process Completed ==="),i.NextResponse.json({success:!0,message:`Billing process completed successfully using ${s}`,results:t,timestamp:new Date().toISOString(),totalProcessed:t.length,successful:t.filter(e=>"success"===e.status).length,failed:t.filter(e=>"failed"===e.status).length})}catch(e){return console.error("=== Billing Process Failed ===",e),i.NextResponse.json({success:!1,error:e instanceof Error?e.message:String(e),timestamp:new Date().toISOString()},{status:500})}}let g=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/billing/process/route",pathname:"/api/billing/process",filename:"route",bundlePath:"app/api/billing/process/route"},resolvedPagePath:"/Users/sravanpolu/Projects/subscription-billing-logic/app/api/billing/process/route.ts",nextConfigOutput:"standalone",userland:t}),{workAsyncStorage:d,workUnitAsyncStorage:f,serverHooks:m}=g;function h(){return(0,l.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:f})}},9294:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var s=require("../../../../webpack-runtime.js");s.C(e);var r=e=>s(s.s=e),t=s.X(0,[447,580,654],()=>r(5971));module.exports=t})();